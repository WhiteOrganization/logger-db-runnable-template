#You can read how to configure this file in:
#Specification: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html

spring.main.lazy-initialization=true

#region ---------- ***PERSISTENCE*** -------------
#DB Autentication Conection
#region  Oracle
#Oracle is very popular, you can use this template to create the DB connection
#spring.datasource.url=jdbc:oracle:oci:@//localhost:1521/dbname?createDatabaseIfNotExist=true
#spring.datasource.username=myusername
#spring.datasource.password=mypassword
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
#endregion Oracle

#region H2
#H2 is configured by default for this project, but you can change the credentials here
#Properties (@property@) asks for them to be obtained from pom.xml
spring.datasource.url=@h2.url@
spring.datasource.username=@h2.user@
spring.datasource.password=@h2.password@
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#endregion H2

# Execute the src/main/resources/data.sql on startup INSERTS and commands. {*embedded*, always, never} [https://stackoverflow.com/questions/53922279/what-are-the-possible-values-of-spring-datasource-initialization-mode]
spring.datasource.initialization-mode=always

# Creates the Database from the Entities. {none,validate,update,create,create-drop (use spring.datasource.initialization-mode)}   https://docs.jboss.org/hibernate/orm/5.0/manual/en-US/html/ch03.html Delete the line in production env.
spring.jpa.hibernate.ddl-auto=create-drop

#endregion ------------------------------------------


# region ---------- ***LOGGING*** ---------------
#Suggested: %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(---) %clr(%-40.40logger{39}){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

#WARNING! every level overrides logback-test.xml configuration (test logs). Everything is going to log this level and up unless specified differently and lowering it to INFO will log unuseful logs from other libraries.
logging.level.root=WARN

#initial **SPRING** banner title in logs
#spring.main.banner-mode=off
#logging.level.org.springframework=WARN

#region              ****AppSpecific****
#This will affect test classes if active
logging.level.org.white_sdev=TRACE
#INFO & DEBUG will activate The Test Classes Methods trace logging but also some extra INFO & DEBUG logs for each Test Class  (<-------------------- APP LEVEL)
logging.level.org.white_sdev.white_seleniumframework=ERROR
logging.level.org.white_sdev.white_crud=DEBUG
logging.level.org.white_sdev.*.test=WARN
logging.level.org.apache.hc.client5=INFO
logging.level.org.apache.hc.client5.http.wire=INFO
logging.level.io.github.bonigarcia=INFO
#endregion AppSpecific


#region ---------------- ***SQL Logging*** ---------------------------
#CPU Consuming https://www.baeldung.com/sql-logging-spring-boot. Also it won't work or have any effect for the current implementation, instead use: spring.jpa.properties.hibernate.show_sql
#spring.jpa.show-sql=true
#This will show up the "select hibernate_sequence" queries only - Preffer logging.level.org.hibernate.SQL instead of this
spring.jpa.properties.hibernate.show_sql=false
#this will show the logs with the same pattern as the rest of the application     ( <------------------------------RECOMMENDED)
#logging.level.org.hibernate.SQL=DEBUG
#Use the next to habilitate individual type of SQL Logging
#logging.level.org.hibernate.insert.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.update.descriptor.sql.BasicBinder=TRACE
#endregion --------------SQL Logging---------------------------

#endregion--------------LOGGING------------------


#region White_SeleniumFramework properties
run.tests.chrome=true
run.tests.ie=false
run.tests.edge=false
run.tests.firefox=false
run.tests.opera=false
default-explicit-wait=5
#implicit-wait:5
maximize-on-open=true
close-on-error=true
#endregion

#region   Custom Properties
#If configured in POM.xml the PropertiesManager will allow you to read this properties like:
# import static org.white_sdev.propertiesmanager.model.service.PropertyProvider.getProperty;
#        //...
#        getProperty("org.white_sdev.template.logger_db_runnable_template.custom");
org.white_sdev.template.logger_db_runnable_template.custom=true
org.white_sdev.template.logger_db_runnable_template.messages.custom2=hello world
#endregion